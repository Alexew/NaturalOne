@inherits FluxorLayout

@inject IDispatcher Dispatcher

<MudThemeProvider @bind-IsDarkMode="@isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary">
        <MudText>Natural 1</MudText>
        <MudSpacer />
        <div style="width: 200px;">
            <CultureSelector />
        </div>
        <MudIconButton Icon="@(isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                       Color="Color.Inherit"
                       OnClick="ToggleTheme" />
    </MudAppBar>
    <MudDrawer Open="true" ClipMode="DrawerClipMode.Always">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool isDarkMode;

    protected override void OnInitialized()
    {
        SubscribeToAction<SetThemeAction>(SetTheme);

        Dispatcher.Dispatch(new LoadThemeAction());
        Dispatcher.Dispatch(new LoadCultureAction());

        base.OnInitialized();
    }

    private void SetTheme(SetThemeAction action)
    {
        isDarkMode = action.IsDarkMode;
    }

    private void ToggleTheme()
    {
        Dispatcher.Dispatch(new ToggleThemeAction());
    }
}